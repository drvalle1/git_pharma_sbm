seq1=0:10
plot(seq1,dpois(seq1,lambda=5),type='h')
rm(list=ls(all=TRUE))
set.seed(3)
setwd('U:\\GIT_models\\github_SBM')
ngroup.loc=5
ngroup.spp=3
#get parameters
tmp=runif(ngroup.loc)
theta.true=theta=tmp/sum(tmp)
tmp=runif(ngroup.spp)
phi.true=phi=tmp/sum(tmp)
set.seed(4)
psi=matrix(c(0.05,0.5,0.95,
0.5,0.05,0.95,
0.05,0.95,0.5,
0.5,0.95,0.05,
0.1,0.5,0.05),ngroup.loc,ngroup.spp,byrow=T)
psi.true=psi
#get latent variables
nloc=1000
tmp=rmultinom(1,size=nloc,prob=theta)
tmp1=rep(1:ngroup.loc,times=tmp)
z.true=z=tmp1 #if not scrambled
# z=sample(tmp1,nind);
nspp=50
tmp=rmultinom(1,size=nspp,prob=phi)
tmp1=rep(1:ngroup.spp,times=tmp)
w.true=w=tmp1 #if not scrambled
# w=sample(tmp1,nquest)
#generate data
seq1=0:10
plot(seq1,dpois(seq1,lambda=5),type='h')
y=n=matrix(NA,nloc,nspp)
for (i in 1:nloc){
for (j in 1:nspp){
n[i,j]=rpois(1,5)
y[i,j]=rbinom(1,size=n[i,j],prob=psi[z[i],w[j]])
}
}
image(y)
n[1:5,1:5]
y[1:5,1:5]
setwd('U:\\GIT_models\\git_pharma_sbm')
rm(list=ls(all=TRUE))
set.seed(3)
ngroup.loc=5
ngroup.spp=3
#get parameters
tmp=runif(ngroup.loc)
theta.true=theta=tmp/sum(tmp)
tmp=runif(ngroup.spp)
phi.true=phi=tmp/sum(tmp)
set.seed(4)
psi=matrix(c(0.05,0.5,0.95,
0.5,0.05,0.95,
0.05,0.95,0.5,
0.5,0.95,0.05,
0.1,0.5,0.05),ngroup.loc,ngroup.spp,byrow=T)
psi.true=psi
#get latent variables
nloc=1000
tmp=rmultinom(1,size=nloc,prob=theta)
tmp1=rep(1:ngroup.loc,times=tmp)
z.true=z=tmp1 #if not scrambled
# z=sample(tmp1,nind);
nspp=50
tmp=rmultinom(1,size=nspp,prob=phi)
tmp1=rep(1:ngroup.spp,times=tmp)
w.true=w=tmp1 #if not scrambled
# w=sample(tmp1,nquest)
#generate data
seq1=0:10
plot(seq1,dpois(seq1,lambda=5),type='h')
y=n=matrix(NA,nloc,nspp)
for (i in 1:nloc){
for (j in 1:nspp){
n[i,j]=rpois(1,5)
y[i,j]=rbinom(1,size=n[i,j],prob=psi[z[i],w[j]])
}
}
image(y)
setwd('U:\\GIT_models\\git_pharma_sbm')
write.csv(y,'sim y.csv',row.names=F)
write.csv(n,'sim n.csv',row.names=F)
rm(list=ls(all=TRUE))
library('Rcpp')
set.seed(4)
setwd('U:\\GIT_models\\git_pharma_sbm')
sourceCpp('rcpp_func.cpp')
source('gibbs functions.R')
source('SBM_main.R')
rm(list=ls(all=TRUE))
library('Rcpp')
set.seed(4)
setwd('U:\\GIT_models\\git_pharma_sbm')
sourceCpp('rcpp_func.cpp')
source('gibbs functions.R')
source('SBM_main.R')
dat= data.matrix(read.csv('sim y.csv',as.is=T))
size=data.matrix(read.csv('sim n.csv',as.is=T))
ngibbs=2000
res=SBM(dat=dat,size=size,ngroup.loc=10,ngroup.spp=10,gamma.v=0.1,gamma.u=0.1,ngibbs=ngibbs)
rm(list=ls(all=TRUE))
library('Rcpp')
set.seed(4)
setwd('U:\\GIT_models\\git_pharma_sbm')
sourceCpp('rcpp_func.cpp')
source('gibbs functions.R')
source('SBM_main.R')
dat= data.matrix(read.csv('sim y.csv',as.is=T))
size=data.matrix(read.csv('sim n.csv',as.is=T))
ngibbs=2000
rm(list=ls(all=TRUE))
library('Rcpp')
set.seed(4)
setwd('U:\\GIT_models\\git_pharma_sbm')
sourceCpp('rcpp_func.cpp')
source('gibbs functions.R')
source('SBM_main.R')
dat= data.matrix(read.csv('sim y.csv',as.is=T))
size=data.matrix(read.csv('sim n.csv',as.is=T))
ngroup.loc=10
ngibbs=2000
ngroup.spp=10
gamma.v=0.1
gamma.u=0.1
res=SBM(dat=dat,size=size,ngroup.loc=ngroup.loc,ngroup.spp=ngroup.spp,
gamma.v=gamma.v,gamma.u=gamma.u,ngibbs=ngibbs)
nloc=nrow(dat)
nspp=ncol(dat)
#get initial values
theta=rep(1/ngroup.loc,ngroup.loc)
phi=rep(1/ngroup.spp,ngroup.spp)
z=sample(1:ngroup.loc,size=nloc,replace=T)
w=sample(1:ngroup.spp,size=nspp,replace=T)
tmp=runif(ngroup.loc*ngroup.spp)
psi=matrix(tmp,ngroup.loc,ngroup.spp)
#useful stuff
datnmy=size-dat
vec.llk.prior=rep(NA,ngibbs)
vec.theta=matrix(NA,ngibbs,ngroup.loc)
vec.phi=matrix(NA,ngibbs,ngroup.spp)
vec.psi=matrix(NA,ngibbs,ngroup.spp*ngroup.loc)
param=list(z=z,w=w,psi=psi,theta=theta,phi=phi)
#start gibbs sampler
options(warn=2)
rm(list=ls(all=TRUE))
library('Rcpp')
set.seed(4)
setwd('U:\\GIT_models\\git_pharma_sbm')
sourceCpp('rcpp_func.cpp')
source('gibbs functions.R')
source('SBM_main.R')
dat= data.matrix(read.csv('sim y.csv',as.is=T))
size=data.matrix(read.csv('sim n.csv',as.is=T))
ngroup.loc=10
ngibbs=2000
ngroup.spp=10
gamma.v=0.1
gamma.u=0.1
res=SBM(dat=dat,size=size,ngroup.loc=ngroup.loc,ngroup.spp=ngroup.spp,
gamma.v=gamma.v,gamma.u=gamma.u,ngibbs=ngibbs)
rm(list=ls(all=TRUE))
library('Rcpp')
set.seed(4)
setwd('U:\\GIT_models\\git_pharma_sbm')
sourceCpp('rcpp_func.cpp')
source('gibbs functions.R')
source('SBM_main.R')
dat= data.matrix(read.csv('sim y.csv',as.is=T))
size=data.matrix(read.csv('sim n.csv',as.is=T))
ngroup.loc=10
ngibbs=2000
ngroup.spp=10
gamma.v=0.1
gamma.u=0.1
nloc=nrow(dat)
nspp=ncol(dat)
#get initial values
theta=rep(1/ngroup.loc,ngroup.loc)
phi=rep(1/ngroup.spp,ngroup.spp)
z=sample(1:ngroup.loc,size=nloc,replace=T)
w=sample(1:ngroup.spp,size=nspp,replace=T)
tmp=runif(ngroup.loc*ngroup.spp)
psi=matrix(tmp,ngroup.loc,ngroup.spp)
#useful stuff
datnmy=size-dat
vec.llk.prior=rep(NA,ngibbs)
vec.theta=matrix(NA,ngibbs,ngroup.loc)
vec.phi=matrix(NA,ngibbs,ngroup.spp)
vec.psi=matrix(NA,ngibbs,ngroup.spp*ngroup.loc)
param=list(z=z,w=w,psi=psi,theta=theta,phi=phi)
datnmy[1:5,1:5]
param$psi=sample.psi(param=param,dat=dat,datnmy=datnmy,
ngroup.loc=ngroup.loc,ngroup.spp=ngroup.spp)
str(param$psi)
lpsi=log(param$psi)
l1mpsi=log(1-param$psi)
tmp=sample.theta(param=param,ngroup.loc=ngroup.loc,gamma.v=gamma.v)
param$theta=tmp$theta
param$vk=tmp$vk
tmp=sample.phi(param=param,ngroup.spp=ngroup.spp,gamma.u=gamma.u)
param$phi=tmp$phi
param$uk=tmp$uk
param$z=samplez(ltheta=log(param$theta),dat=dat,datnmy=datnmy,lpsi=lpsi,l1mpsi=l1mpsi,
w=param$w-1,runi=runif(nrow(dat)))
param$w=samplew(lphi=log(param$phi),dat=dat,datnmy=datnmy,lpsi=lpsi,l1mpsi=l1mpsi,
z=param$z-1,runi=runif(ncol(dat)))
rm(list=ls(all=TRUE))
library('Rcpp')
set.seed(4)
setwd('U:\\GIT_models\\git_pharma_sbm')
sourceCpp('rcpp_func.cpp')
source('gibbs functions.R')
source('SBM_main.R')
dat= data.matrix(read.csv('sim y.csv',as.is=T))
size=data.matrix(read.csv('sim n.csv',as.is=T))
ngroup.loc=10
ngibbs=2000
ngroup.spp=10
gamma.v=0.1
gamma.u=0.1
res=SBM(dat=dat,size=size,ngroup.loc=ngroup.loc,ngroup.spp=ngroup.spp,
gamma.v=gamma.v,gamma.u=gamma.u,ngibbs=ngibbs)
str(res)
dim(dat)
plot(res$llk.prior,type='l')
plot(res$llk,type='l')
seq1=100:ngibbs
plot(res$llk.prior[seq1],type='l')
seq1=100:ngibbs
plot(res$llk[seq1],type='l')
k=data.frame(ztrue=z.true,zestim=res$z)
table(k)
set.seed(3)
ngroup.loc=5
ngroup.spp=3
#get parameters
tmp=runif(ngroup.loc)
theta.true=theta=tmp/sum(tmp)
tmp=runif(ngroup.spp)
phi.true=phi=tmp/sum(tmp)
set.seed(4)
psi=matrix(c(0.05,0.5,0.95,
0.5,0.05,0.95,
0.05,0.95,0.5,
0.5,0.95,0.05,
0.1,0.5,0.05),ngroup.loc,ngroup.spp,byrow=T)
psi.true=psi
#get latent variables
nloc=1000
tmp=rmultinom(1,size=nloc,prob=theta)
tmp1=rep(1:ngroup.loc,times=tmp)
z.true=z=tmp1 #if not scrambled
# z=sample(tmp1,nind);
nspp=50
tmp=rmultinom(1,size=nspp,prob=phi)
tmp1=rep(1:ngroup.spp,times=tmp)
w.true=w=tmp1 #if not scrambled
# w=sample(tmp1,nquest)
#generate data
seq1=0:10
plot(seq1,dpois(seq1,lambda=5),type='h')
y=n=matrix(NA,nloc,nspp)
for (i in 1:nloc){
for (j in 1:nspp){
n[i,j]=rpois(1,5)
y[i,j]=rbinom(1,size=n[i,j],prob=psi[z[i],w[j]])
}
}
image(y)
k=data.frame(ztrue=z.true,zestim=res$z)
table(k)
ind.loc=c(5,4,2,1,6)
plot(res$theta,type='h')
res$theta[ind.loc];theta.true
dim(res$theta)
plot(res$theta[ngibbs,],type='h')
res$theta[ind.loc];theta.true
k=data.frame(ztrue=z.true,zestim=res$z)
table(k)
ind.loc=c(5,4,2,1,6)
plot(res$theta[ngibbs,],type='h')
res$theta[ngibbs,ind.loc];theta.true
rango=range(c(theta.true,res$theta[ngibbs,ind.loc]))
plot(theta.true,res$theta[ngibbs,ind.loc],xlim=rango,ylim=rango)
lines(rango,rango)
k=data.frame(wtrue=w.true,westim=res$w)
table(k)
ind.spp=c(8,5,9)
res$phi[ngibbs,ind.spp];phi.true
rango=range(c(res$phi[ngibbs,ind.spp],phi.true))
plot(phi.true,res$phi[ngibbs,ind.spp],xlim=rango,ylim=rango)
lines(rango,rango)
psi0=matrix(res$psi[ngibbs,],ngroup.loc,ngroup.spp)
psi=psi0[,ind.spp]
psi1=psi[ind.loc,]
rango=c(0,1)
plot(psi1,psi.true,xlim=rango,ylim=rango)
lines(rango,rango)
psi0=matrix(res$psi[ngibbs,],ngroup.loc,ngroup.spp)
dim(res$psi)
ngibbs
psi0=matrix(res$psi[ngibbs,],10,10)
psi=psi0[,ind.spp]
psi1=psi[ind.loc,]
rango=c(0,1)
plot(psi1,psi.true,xlim=rango,ylim=rango)
lines(rango,rango)
